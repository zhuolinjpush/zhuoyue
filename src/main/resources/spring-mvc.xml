<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-lazy-init="true">

    <context:property-placeholder location="classpath:system.properties" ignore-unresolvable="true"/>

    <context:component-scan base-package="cn.jpush.controller"/>

    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <!-- 指定自己定义的validator -->
    <mvc:annotation-driven validator="validator"/>

    <!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
                <value>classpath:messages/messages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>
        <!-- 不抛出NoSuchMessageException, 使用messageKey作为返回值 -->
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="fallbackToSystemLocale" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <bean class="cn.jpush.commons.utils.mvc.dev.DevelopModelInterceptor">
            <property name="debugable" value="${api.debugable}"/>
        </bean>
        <bean class="cn.jpush.interceptor.UserInterceptor" />
        <bean class="cn.jpush.interceptor.CommonInterceptor"/>
        <bean class="cn.jpush.interceptor.MenuInterceptor" />
        <bean class="cn.jpush.interceptor.AppValidInterceptor"/>
        <mvc:interceptor>
            <mvc:mapping path="/admin"/>
            <bean class="cn.jpush.interceptor.AdminInterceptor"/>
        </mvc:interceptor>

    </mvc:interceptors>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
        <property name="cookieMaxAge" value="94608000"/>
    </bean>
    <!-- 配置首页 -->
    <mvc:view-controller path="/" view-name="index"/>
    <!-- 对模型视图添加前后缀 -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.JstlView</value>
        </property>
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <!-- 支持返回json(避免IE在ajax请求时，返回json出现下载 ) -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 支持返回json -->

    <!-- 配置springMVC处理上传文件的信息 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!-- 全局异常配置 start -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">redirect:/errors/404</prop>
                <prop key="java.lang.Throwable">redirect:/errors/404</prop>
                <prop key="java.lang.RuntimeException">redirect:/errors/404</prop>
                <prop key="java.sql.SQLException">redirect:/errors/404</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="errors/500">500</prop>
                <prop key="errors/404">404</prop>
            </props>
        </property>
        <!--设置日志输出级别，不定义则默认不输出警告等错误日志信息  -->
        <property name="warnLogCategory" value="WARN"/>
        <!--默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置    -->
        <property name="defaultErrorView" value="/errors/500"/>
        <!--默认HTTP状态码  -->
        <property name="defaultStatusCode" value="500"/>
    </bean>
    <!-- 全局异常配置 end -->

    <!--对静态资源文件的访问-->
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/"/>
    <mvc:resources mapping="/css/**" location="/WEB-INF/css/"/>
    <mvc:resources mapping="/img/**" location="/WEB-INF/img/"/>
    <mvc:resources mapping="/i18n/**" location="/WEB-INF/i18n/"/>
    <!--<mvc:resources mapping="/**" location="/WEB-INF/"/>-->

</beans>